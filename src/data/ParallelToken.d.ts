/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
    ethers,
    EventFilter,
    Signer,
    BigNumber,
    BigNumberish,
    PopulatedTransaction,
    Contract,
    ContractTransaction,
    Overrides,
    CallOverrides
} from "ethers"
import { BytesLike } from "@ethersproject/bytes"
import { Listener, Provider } from "@ethersproject/providers"
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi"
import { TypedEventFilter, TypedEvent, TypedListener } from "./commons"

interface ParallelTokenInterface extends ethers.utils.Interface {
    functions: {
        "addSigner(address)": FunctionFragment
        "balanceOf(address,uint256)": FunctionFragment
        "balanceOfBatch(address[],uint256[])": FunctionFragment
        "burn(address,uint256,uint256)": FunctionFragment
        "contractURI()": FunctionFragment
        "creators(uint256)": FunctionFragment
        "fees(uint256,uint256)": FunctionFragment
        "getFeeBps(uint256)": FunctionFragment
        "getFeeRecipients(uint256)": FunctionFragment
        "isApprovedForAll(address,address)": FunctionFragment
        "isOwner()": FunctionFragment
        "isSigner(address)": FunctionFragment
        "mint(uint256,uint8,bytes32,bytes32,tuple[],uint256,string)": FunctionFragment
        "name()": FunctionFragment
        "owner()": FunctionFragment
        "removeSigner(address)": FunctionFragment
        "renounceOwnership()": FunctionFragment
        "renounceSigner()": FunctionFragment
        "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": FunctionFragment
        "safeTransferFrom(address,address,uint256,uint256,bytes)": FunctionFragment
        "setApprovalForAll(address,bool)": FunctionFragment
        "setContractURI(string)": FunctionFragment
        "setTokenURIPrefix(string)": FunctionFragment
        "supportsInterface(bytes4)": FunctionFragment
        "symbol()": FunctionFragment
        "tokenURIPrefix()": FunctionFragment
        "transferOwnership(address)": FunctionFragment
        "uri(uint256)": FunctionFragment
    }

    encodeFunctionData(functionFragment: "addSigner", values: [string]): string
    encodeFunctionData(
        functionFragment: "balanceOf",
        values: [string, BigNumberish]
    ): string
    encodeFunctionData(
        functionFragment: "balanceOfBatch",
        values: [string[], BigNumberish[]]
    ): string
    encodeFunctionData(
        functionFragment: "burn",
        values: [string, BigNumberish, BigNumberish]
    ): string
    encodeFunctionData(
        functionFragment: "contractURI",
        values?: undefined
    ): string
    encodeFunctionData(
        functionFragment: "creators",
        values: [BigNumberish]
    ): string
    encodeFunctionData(
        functionFragment: "fees",
        values: [BigNumberish, BigNumberish]
    ): string
    encodeFunctionData(
        functionFragment: "getFeeBps",
        values: [BigNumberish]
    ): string
    encodeFunctionData(
        functionFragment: "getFeeRecipients",
        values: [BigNumberish]
    ): string
    encodeFunctionData(
        functionFragment: "isApprovedForAll",
        values: [string, string]
    ): string
    encodeFunctionData(functionFragment: "isOwner", values?: undefined): string
    encodeFunctionData(functionFragment: "isSigner", values: [string]): string
    encodeFunctionData(
        functionFragment: "mint",
        values: [
            BigNumberish,
            BigNumberish,
            BytesLike,
            BytesLike,
            { recipient: string; value: BigNumberish }[],
            BigNumberish,
            string
        ]
    ): string
    encodeFunctionData(functionFragment: "name", values?: undefined): string
    encodeFunctionData(functionFragment: "owner", values?: undefined): string
    encodeFunctionData(
        functionFragment: "removeSigner",
        values: [string]
    ): string
    encodeFunctionData(
        functionFragment: "renounceOwnership",
        values?: undefined
    ): string
    encodeFunctionData(
        functionFragment: "renounceSigner",
        values?: undefined
    ): string
    encodeFunctionData(
        functionFragment: "safeBatchTransferFrom",
        values: [string, string, BigNumberish[], BigNumberish[], BytesLike]
    ): string
    encodeFunctionData(
        functionFragment: "safeTransferFrom",
        values: [string, string, BigNumberish, BigNumberish, BytesLike]
    ): string
    encodeFunctionData(
        functionFragment: "setApprovalForAll",
        values: [string, boolean]
    ): string
    encodeFunctionData(
        functionFragment: "setContractURI",
        values: [string]
    ): string
    encodeFunctionData(
        functionFragment: "setTokenURIPrefix",
        values: [string]
    ): string
    encodeFunctionData(
        functionFragment: "supportsInterface",
        values: [BytesLike]
    ): string
    encodeFunctionData(functionFragment: "symbol", values?: undefined): string
    encodeFunctionData(
        functionFragment: "tokenURIPrefix",
        values?: undefined
    ): string
    encodeFunctionData(
        functionFragment: "transferOwnership",
        values: [string]
    ): string
    encodeFunctionData(functionFragment: "uri", values: [BigNumberish]): string

    decodeFunctionResult(functionFragment: "addSigner", data: BytesLike): Result
    decodeFunctionResult(functionFragment: "balanceOf", data: BytesLike): Result
    decodeFunctionResult(
        functionFragment: "balanceOfBatch",
        data: BytesLike
    ): Result
    decodeFunctionResult(functionFragment: "burn", data: BytesLike): Result
    decodeFunctionResult(
        functionFragment: "contractURI",
        data: BytesLike
    ): Result
    decodeFunctionResult(functionFragment: "creators", data: BytesLike): Result
    decodeFunctionResult(functionFragment: "fees", data: BytesLike): Result
    decodeFunctionResult(functionFragment: "getFeeBps", data: BytesLike): Result
    decodeFunctionResult(
        functionFragment: "getFeeRecipients",
        data: BytesLike
    ): Result
    decodeFunctionResult(
        functionFragment: "isApprovedForAll",
        data: BytesLike
    ): Result
    decodeFunctionResult(functionFragment: "isOwner", data: BytesLike): Result
    decodeFunctionResult(functionFragment: "isSigner", data: BytesLike): Result
    decodeFunctionResult(functionFragment: "mint", data: BytesLike): Result
    decodeFunctionResult(functionFragment: "name", data: BytesLike): Result
    decodeFunctionResult(functionFragment: "owner", data: BytesLike): Result
    decodeFunctionResult(
        functionFragment: "removeSigner",
        data: BytesLike
    ): Result
    decodeFunctionResult(
        functionFragment: "renounceOwnership",
        data: BytesLike
    ): Result
    decodeFunctionResult(
        functionFragment: "renounceSigner",
        data: BytesLike
    ): Result
    decodeFunctionResult(
        functionFragment: "safeBatchTransferFrom",
        data: BytesLike
    ): Result
    decodeFunctionResult(
        functionFragment: "safeTransferFrom",
        data: BytesLike
    ): Result
    decodeFunctionResult(
        functionFragment: "setApprovalForAll",
        data: BytesLike
    ): Result
    decodeFunctionResult(
        functionFragment: "setContractURI",
        data: BytesLike
    ): Result
    decodeFunctionResult(
        functionFragment: "setTokenURIPrefix",
        data: BytesLike
    ): Result
    decodeFunctionResult(
        functionFragment: "supportsInterface",
        data: BytesLike
    ): Result
    decodeFunctionResult(functionFragment: "symbol", data: BytesLike): Result
    decodeFunctionResult(
        functionFragment: "tokenURIPrefix",
        data: BytesLike
    ): Result
    decodeFunctionResult(
        functionFragment: "transferOwnership",
        data: BytesLike
    ): Result
    decodeFunctionResult(functionFragment: "uri", data: BytesLike): Result

    events: {
        "ApprovalForAll(address,address,bool)": EventFragment
        "CreateERC1155_v1(address,string,string)": EventFragment
        "OwnershipTransferred(address,address)": EventFragment
        "SecondarySaleFees(uint256,address[],uint256[])": EventFragment
        "SignerAdded(address)": EventFragment
        "SignerRemoved(address)": EventFragment
        "TransferBatch(address,address,address,uint256[],uint256[])": EventFragment
        "TransferSingle(address,address,address,uint256,uint256)": EventFragment
        "URI(string,uint256)": EventFragment
    }

    getEvent(nameOrSignatureOrTopic: "ApprovalForAll"): EventFragment
    getEvent(nameOrSignatureOrTopic: "CreateERC1155_v1"): EventFragment
    getEvent(nameOrSignatureOrTopic: "OwnershipTransferred"): EventFragment
    getEvent(nameOrSignatureOrTopic: "SecondarySaleFees"): EventFragment
    getEvent(nameOrSignatureOrTopic: "SignerAdded"): EventFragment
    getEvent(nameOrSignatureOrTopic: "SignerRemoved"): EventFragment
    getEvent(nameOrSignatureOrTopic: "TransferBatch"): EventFragment
    getEvent(nameOrSignatureOrTopic: "TransferSingle"): EventFragment
    getEvent(nameOrSignatureOrTopic: "URI"): EventFragment
}

export class ParallelToken extends Contract {
    connect(signerOrProvider: Signer | Provider | string): this
    attach(addressOrName: string): this
    deployed(): Promise<this>

    listeners<EventArgsArray extends Array<any>, EventArgsObject>(
        eventFilter?: TypedEventFilter<EventArgsArray, EventArgsObject>
    ): Array<TypedListener<EventArgsArray, EventArgsObject>>
    off<EventArgsArray extends Array<any>, EventArgsObject>(
        eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
        listener: TypedListener<EventArgsArray, EventArgsObject>
    ): this
    on<EventArgsArray extends Array<any>, EventArgsObject>(
        eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
        listener: TypedListener<EventArgsArray, EventArgsObject>
    ): this
    once<EventArgsArray extends Array<any>, EventArgsObject>(
        eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
        listener: TypedListener<EventArgsArray, EventArgsObject>
    ): this
    removeListener<EventArgsArray extends Array<any>, EventArgsObject>(
        eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
        listener: TypedListener<EventArgsArray, EventArgsObject>
    ): this
    removeAllListeners<EventArgsArray extends Array<any>, EventArgsObject>(
        eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>
    ): this

    listeners(eventName?: string): Array<Listener>
    off(eventName: string, listener: Listener): this
    on(eventName: string, listener: Listener): this
    once(eventName: string, listener: Listener): this
    removeListener(eventName: string, listener: Listener): this
    removeAllListeners(eventName?: string): this

    queryFilter<EventArgsArray extends Array<any>, EventArgsObject>(
        event: TypedEventFilter<EventArgsArray, EventArgsObject>,
        fromBlockOrBlockhash?: string | number | undefined,
        toBlock?: string | number | undefined
    ): Promise<Array<TypedEvent<EventArgsArray & EventArgsObject>>>

    interface: ParallelTokenInterface

    functions: {
        addSigner(
            account: string,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<ContractTransaction>

        "addSigner(address)"(
            account: string,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<ContractTransaction>

        balanceOf(
            _owner: string,
            _id: BigNumberish,
            overrides?: CallOverrides
        ): Promise<[BigNumber]>

        "balanceOf(address,uint256)"(
            _owner: string,
            _id: BigNumberish,
            overrides?: CallOverrides
        ): Promise<[BigNumber]>

        balanceOfBatch(
            _owners: string[],
            _ids: BigNumberish[],
            overrides?: CallOverrides
        ): Promise<[BigNumber[]]>

        "balanceOfBatch(address[],uint256[])"(
            _owners: string[],
            _ids: BigNumberish[],
            overrides?: CallOverrides
        ): Promise<[BigNumber[]]>

        burn(
            _owner: string,
            _id: BigNumberish,
            _value: BigNumberish,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<ContractTransaction>

        "burn(address,uint256,uint256)"(
            _owner: string,
            _id: BigNumberish,
            _value: BigNumberish,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<ContractTransaction>

        contractURI(overrides?: CallOverrides): Promise<[string]>

        "contractURI()"(overrides?: CallOverrides): Promise<[string]>

        creators(
            arg0: BigNumberish,
            overrides?: CallOverrides
        ): Promise<[string]>

        "creators(uint256)"(
            arg0: BigNumberish,
            overrides?: CallOverrides
        ): Promise<[string]>

        fees(
            arg0: BigNumberish,
            arg1: BigNumberish,
            overrides?: CallOverrides
        ): Promise<
            [string, BigNumber] & { recipient: string; value: BigNumber }
        >

        "fees(uint256,uint256)"(
            arg0: BigNumberish,
            arg1: BigNumberish,
            overrides?: CallOverrides
        ): Promise<
            [string, BigNumber] & { recipient: string; value: BigNumber }
        >

        getFeeBps(
            id: BigNumberish,
            overrides?: CallOverrides
        ): Promise<[BigNumber[]]>

        "getFeeBps(uint256)"(
            id: BigNumberish,
            overrides?: CallOverrides
        ): Promise<[BigNumber[]]>

        getFeeRecipients(
            id: BigNumberish,
            overrides?: CallOverrides
        ): Promise<[string[]]>

        "getFeeRecipients(uint256)"(
            id: BigNumberish,
            overrides?: CallOverrides
        ): Promise<[string[]]>

        isApprovedForAll(
            _owner: string,
            _operator: string,
            overrides?: CallOverrides
        ): Promise<[boolean]>

        "isApprovedForAll(address,address)"(
            _owner: string,
            _operator: string,
            overrides?: CallOverrides
        ): Promise<[boolean]>

        isOwner(overrides?: CallOverrides): Promise<[boolean]>

        "isOwner()"(overrides?: CallOverrides): Promise<[boolean]>

        isSigner(account: string, overrides?: CallOverrides): Promise<[boolean]>

        "isSigner(address)"(
            account: string,
            overrides?: CallOverrides
        ): Promise<[boolean]>

        mint(
            id: BigNumberish,
            v: BigNumberish,
            r: BytesLike,
            s: BytesLike,
            fees: { recipient: string; value: BigNumberish }[],
            supply: BigNumberish,
            uri: string,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<ContractTransaction>

        "mint(uint256,uint8,bytes32,bytes32,tuple[],uint256,string)"(
            id: BigNumberish,
            v: BigNumberish,
            r: BytesLike,
            s: BytesLike,
            fees: { recipient: string; value: BigNumberish }[],
            supply: BigNumberish,
            uri: string,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<ContractTransaction>

        name(overrides?: CallOverrides): Promise<[string]>

        "name()"(overrides?: CallOverrides): Promise<[string]>

        owner(overrides?: CallOverrides): Promise<[string]>

        "owner()"(overrides?: CallOverrides): Promise<[string]>

        removeSigner(
            account: string,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<ContractTransaction>

        "removeSigner(address)"(
            account: string,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<ContractTransaction>

        renounceOwnership(
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<ContractTransaction>

        "renounceOwnership()"(
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<ContractTransaction>

        renounceSigner(
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<ContractTransaction>

        "renounceSigner()"(
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<ContractTransaction>

        safeBatchTransferFrom(
            _from: string,
            _to: string,
            _ids: BigNumberish[],
            _values: BigNumberish[],
            _data: BytesLike,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<ContractTransaction>

        "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"(
            _from: string,
            _to: string,
            _ids: BigNumberish[],
            _values: BigNumberish[],
            _data: BytesLike,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<ContractTransaction>

        safeTransferFrom(
            _from: string,
            _to: string,
            _id: BigNumberish,
            _value: BigNumberish,
            _data: BytesLike,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<ContractTransaction>

        "safeTransferFrom(address,address,uint256,uint256,bytes)"(
            _from: string,
            _to: string,
            _id: BigNumberish,
            _value: BigNumberish,
            _data: BytesLike,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<ContractTransaction>

        setApprovalForAll(
            _operator: string,
            _approved: boolean,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<ContractTransaction>

        "setApprovalForAll(address,bool)"(
            _operator: string,
            _approved: boolean,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<ContractTransaction>

        setContractURI(
            contractURI: string,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<ContractTransaction>

        "setContractURI(string)"(
            contractURI: string,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<ContractTransaction>

        setTokenURIPrefix(
            tokenURIPrefix: string,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<ContractTransaction>

        "setTokenURIPrefix(string)"(
            tokenURIPrefix: string,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<ContractTransaction>

        supportsInterface(
            interfaceId: BytesLike,
            overrides?: CallOverrides
        ): Promise<[boolean]>

        "supportsInterface(bytes4)"(
            interfaceId: BytesLike,
            overrides?: CallOverrides
        ): Promise<[boolean]>

        symbol(overrides?: CallOverrides): Promise<[string]>

        "symbol()"(overrides?: CallOverrides): Promise<[string]>

        tokenURIPrefix(overrides?: CallOverrides): Promise<[string]>

        "tokenURIPrefix()"(overrides?: CallOverrides): Promise<[string]>

        transferOwnership(
            newOwner: string,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<ContractTransaction>

        "transferOwnership(address)"(
            newOwner: string,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<ContractTransaction>

        uri(_id: BigNumberish, overrides?: CallOverrides): Promise<[string]>

        "uri(uint256)"(
            _id: BigNumberish,
            overrides?: CallOverrides
        ): Promise<[string]>
    }

    addSigner(
        account: string,
        overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>

    "addSigner(address)"(
        account: string,
        overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>

    balanceOf(
        _owner: string,
        _id: BigNumberish,
        overrides?: CallOverrides
    ): Promise<BigNumber>

    "balanceOf(address,uint256)"(
        _owner: string,
        _id: BigNumberish,
        overrides?: CallOverrides
    ): Promise<BigNumber>

    balanceOfBatch(
        _owners: string[],
        _ids: BigNumberish[],
        overrides?: CallOverrides
    ): Promise<BigNumber[]>

    "balanceOfBatch(address[],uint256[])"(
        _owners: string[],
        _ids: BigNumberish[],
        overrides?: CallOverrides
    ): Promise<BigNumber[]>

    burn(
        _owner: string,
        _id: BigNumberish,
        _value: BigNumberish,
        overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>

    "burn(address,uint256,uint256)"(
        _owner: string,
        _id: BigNumberish,
        _value: BigNumberish,
        overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>

    contractURI(overrides?: CallOverrides): Promise<string>

    "contractURI()"(overrides?: CallOverrides): Promise<string>

    creators(arg0: BigNumberish, overrides?: CallOverrides): Promise<string>

    "creators(uint256)"(
        arg0: BigNumberish,
        overrides?: CallOverrides
    ): Promise<string>

    fees(
        arg0: BigNumberish,
        arg1: BigNumberish,
        overrides?: CallOverrides
    ): Promise<[string, BigNumber] & { recipient: string; value: BigNumber }>

    "fees(uint256,uint256)"(
        arg0: BigNumberish,
        arg1: BigNumberish,
        overrides?: CallOverrides
    ): Promise<[string, BigNumber] & { recipient: string; value: BigNumber }>

    getFeeBps(id: BigNumberish, overrides?: CallOverrides): Promise<BigNumber[]>

    "getFeeBps(uint256)"(
        id: BigNumberish,
        overrides?: CallOverrides
    ): Promise<BigNumber[]>

    getFeeRecipients(
        id: BigNumberish,
        overrides?: CallOverrides
    ): Promise<string[]>

    "getFeeRecipients(uint256)"(
        id: BigNumberish,
        overrides?: CallOverrides
    ): Promise<string[]>

    isApprovedForAll(
        _owner: string,
        _operator: string,
        overrides?: CallOverrides
    ): Promise<boolean>

    "isApprovedForAll(address,address)"(
        _owner: string,
        _operator: string,
        overrides?: CallOverrides
    ): Promise<boolean>

    isOwner(overrides?: CallOverrides): Promise<boolean>

    "isOwner()"(overrides?: CallOverrides): Promise<boolean>

    isSigner(account: string, overrides?: CallOverrides): Promise<boolean>

    "isSigner(address)"(
        account: string,
        overrides?: CallOverrides
    ): Promise<boolean>

    mint(
        id: BigNumberish,
        v: BigNumberish,
        r: BytesLike,
        s: BytesLike,
        fees: { recipient: string; value: BigNumberish }[],
        supply: BigNumberish,
        uri: string,
        overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>

    "mint(uint256,uint8,bytes32,bytes32,tuple[],uint256,string)"(
        id: BigNumberish,
        v: BigNumberish,
        r: BytesLike,
        s: BytesLike,
        fees: { recipient: string; value: BigNumberish }[],
        supply: BigNumberish,
        uri: string,
        overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>

    name(overrides?: CallOverrides): Promise<string>

    "name()"(overrides?: CallOverrides): Promise<string>

    owner(overrides?: CallOverrides): Promise<string>

    "owner()"(overrides?: CallOverrides): Promise<string>

    removeSigner(
        account: string,
        overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>

    "removeSigner(address)"(
        account: string,
        overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>

    renounceOwnership(
        overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>

    "renounceOwnership()"(
        overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>

    renounceSigner(
        overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>

    "renounceSigner()"(
        overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>

    safeBatchTransferFrom(
        _from: string,
        _to: string,
        _ids: BigNumberish[],
        _values: BigNumberish[],
        _data: BytesLike,
        overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>

    "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"(
        _from: string,
        _to: string,
        _ids: BigNumberish[],
        _values: BigNumberish[],
        _data: BytesLike,
        overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>

    safeTransferFrom(
        _from: string,
        _to: string,
        _id: BigNumberish,
        _value: BigNumberish,
        _data: BytesLike,
        overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>

    "safeTransferFrom(address,address,uint256,uint256,bytes)"(
        _from: string,
        _to: string,
        _id: BigNumberish,
        _value: BigNumberish,
        _data: BytesLike,
        overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>

    setApprovalForAll(
        _operator: string,
        _approved: boolean,
        overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>

    "setApprovalForAll(address,bool)"(
        _operator: string,
        _approved: boolean,
        overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>

    setContractURI(
        contractURI: string,
        overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>

    "setContractURI(string)"(
        contractURI: string,
        overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>

    setTokenURIPrefix(
        tokenURIPrefix: string,
        overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>

    "setTokenURIPrefix(string)"(
        tokenURIPrefix: string,
        overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>

    supportsInterface(
        interfaceId: BytesLike,
        overrides?: CallOverrides
    ): Promise<boolean>

    "supportsInterface(bytes4)"(
        interfaceId: BytesLike,
        overrides?: CallOverrides
    ): Promise<boolean>

    symbol(overrides?: CallOverrides): Promise<string>

    "symbol()"(overrides?: CallOverrides): Promise<string>

    tokenURIPrefix(overrides?: CallOverrides): Promise<string>

    "tokenURIPrefix()"(overrides?: CallOverrides): Promise<string>

    transferOwnership(
        newOwner: string,
        overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>

    "transferOwnership(address)"(
        newOwner: string,
        overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>

    uri(_id: BigNumberish, overrides?: CallOverrides): Promise<string>

    "uri(uint256)"(
        _id: BigNumberish,
        overrides?: CallOverrides
    ): Promise<string>

    callStatic: {
        addSigner(account: string, overrides?: CallOverrides): Promise<void>

        "addSigner(address)"(
            account: string,
            overrides?: CallOverrides
        ): Promise<void>

        balanceOf(
            _owner: string,
            _id: BigNumberish,
            overrides?: CallOverrides
        ): Promise<BigNumber>

        "balanceOf(address,uint256)"(
            _owner: string,
            _id: BigNumberish,
            overrides?: CallOverrides
        ): Promise<BigNumber>

        balanceOfBatch(
            _owners: string[],
            _ids: BigNumberish[],
            overrides?: CallOverrides
        ): Promise<BigNumber[]>

        "balanceOfBatch(address[],uint256[])"(
            _owners: string[],
            _ids: BigNumberish[],
            overrides?: CallOverrides
        ): Promise<BigNumber[]>

        burn(
            _owner: string,
            _id: BigNumberish,
            _value: BigNumberish,
            overrides?: CallOverrides
        ): Promise<void>

        "burn(address,uint256,uint256)"(
            _owner: string,
            _id: BigNumberish,
            _value: BigNumberish,
            overrides?: CallOverrides
        ): Promise<void>

        contractURI(overrides?: CallOverrides): Promise<string>

        "contractURI()"(overrides?: CallOverrides): Promise<string>

        creators(arg0: BigNumberish, overrides?: CallOverrides): Promise<string>

        "creators(uint256)"(
            arg0: BigNumberish,
            overrides?: CallOverrides
        ): Promise<string>

        fees(
            arg0: BigNumberish,
            arg1: BigNumberish,
            overrides?: CallOverrides
        ): Promise<
            [string, BigNumber] & { recipient: string; value: BigNumber }
        >

        "fees(uint256,uint256)"(
            arg0: BigNumberish,
            arg1: BigNumberish,
            overrides?: CallOverrides
        ): Promise<
            [string, BigNumber] & { recipient: string; value: BigNumber }
        >

        getFeeBps(
            id: BigNumberish,
            overrides?: CallOverrides
        ): Promise<BigNumber[]>

        "getFeeBps(uint256)"(
            id: BigNumberish,
            overrides?: CallOverrides
        ): Promise<BigNumber[]>

        getFeeRecipients(
            id: BigNumberish,
            overrides?: CallOverrides
        ): Promise<string[]>

        "getFeeRecipients(uint256)"(
            id: BigNumberish,
            overrides?: CallOverrides
        ): Promise<string[]>

        isApprovedForAll(
            _owner: string,
            _operator: string,
            overrides?: CallOverrides
        ): Promise<boolean>

        "isApprovedForAll(address,address)"(
            _owner: string,
            _operator: string,
            overrides?: CallOverrides
        ): Promise<boolean>

        isOwner(overrides?: CallOverrides): Promise<boolean>

        "isOwner()"(overrides?: CallOverrides): Promise<boolean>

        isSigner(account: string, overrides?: CallOverrides): Promise<boolean>

        "isSigner(address)"(
            account: string,
            overrides?: CallOverrides
        ): Promise<boolean>

        mint(
            id: BigNumberish,
            v: BigNumberish,
            r: BytesLike,
            s: BytesLike,
            fees: { recipient: string; value: BigNumberish }[],
            supply: BigNumberish,
            uri: string,
            overrides?: CallOverrides
        ): Promise<void>

        "mint(uint256,uint8,bytes32,bytes32,tuple[],uint256,string)"(
            id: BigNumberish,
            v: BigNumberish,
            r: BytesLike,
            s: BytesLike,
            fees: { recipient: string; value: BigNumberish }[],
            supply: BigNumberish,
            uri: string,
            overrides?: CallOverrides
        ): Promise<void>

        name(overrides?: CallOverrides): Promise<string>

        "name()"(overrides?: CallOverrides): Promise<string>

        owner(overrides?: CallOverrides): Promise<string>

        "owner()"(overrides?: CallOverrides): Promise<string>

        removeSigner(account: string, overrides?: CallOverrides): Promise<void>

        "removeSigner(address)"(
            account: string,
            overrides?: CallOverrides
        ): Promise<void>

        renounceOwnership(overrides?: CallOverrides): Promise<void>

        "renounceOwnership()"(overrides?: CallOverrides): Promise<void>

        renounceSigner(overrides?: CallOverrides): Promise<void>

        "renounceSigner()"(overrides?: CallOverrides): Promise<void>

        safeBatchTransferFrom(
            _from: string,
            _to: string,
            _ids: BigNumberish[],
            _values: BigNumberish[],
            _data: BytesLike,
            overrides?: CallOverrides
        ): Promise<void>

        "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"(
            _from: string,
            _to: string,
            _ids: BigNumberish[],
            _values: BigNumberish[],
            _data: BytesLike,
            overrides?: CallOverrides
        ): Promise<void>

        safeTransferFrom(
            _from: string,
            _to: string,
            _id: BigNumberish,
            _value: BigNumberish,
            _data: BytesLike,
            overrides?: CallOverrides
        ): Promise<void>

        "safeTransferFrom(address,address,uint256,uint256,bytes)"(
            _from: string,
            _to: string,
            _id: BigNumberish,
            _value: BigNumberish,
            _data: BytesLike,
            overrides?: CallOverrides
        ): Promise<void>

        setApprovalForAll(
            _operator: string,
            _approved: boolean,
            overrides?: CallOverrides
        ): Promise<void>

        "setApprovalForAll(address,bool)"(
            _operator: string,
            _approved: boolean,
            overrides?: CallOverrides
        ): Promise<void>

        setContractURI(
            contractURI: string,
            overrides?: CallOverrides
        ): Promise<void>

        "setContractURI(string)"(
            contractURI: string,
            overrides?: CallOverrides
        ): Promise<void>

        setTokenURIPrefix(
            tokenURIPrefix: string,
            overrides?: CallOverrides
        ): Promise<void>

        "setTokenURIPrefix(string)"(
            tokenURIPrefix: string,
            overrides?: CallOverrides
        ): Promise<void>

        supportsInterface(
            interfaceId: BytesLike,
            overrides?: CallOverrides
        ): Promise<boolean>

        "supportsInterface(bytes4)"(
            interfaceId: BytesLike,
            overrides?: CallOverrides
        ): Promise<boolean>

        symbol(overrides?: CallOverrides): Promise<string>

        "symbol()"(overrides?: CallOverrides): Promise<string>

        tokenURIPrefix(overrides?: CallOverrides): Promise<string>

        "tokenURIPrefix()"(overrides?: CallOverrides): Promise<string>

        transferOwnership(
            newOwner: string,
            overrides?: CallOverrides
        ): Promise<void>

        "transferOwnership(address)"(
            newOwner: string,
            overrides?: CallOverrides
        ): Promise<void>

        uri(_id: BigNumberish, overrides?: CallOverrides): Promise<string>

        "uri(uint256)"(
            _id: BigNumberish,
            overrides?: CallOverrides
        ): Promise<string>
    }

    filters: {
        ApprovalForAll(
            _owner: string | null,
            _operator: string | null,
            _approved: null
        ): TypedEventFilter<
            [string, string, boolean],
            { _owner: string; _operator: string; _approved: boolean }
        >

        CreateERC1155_v1(
            creator: string | null,
            name: null,
            symbol: null
        ): TypedEventFilter<
            [string, string, string],
            { creator: string; name: string; symbol: string }
        >

        OwnershipTransferred(
            previousOwner: string | null,
            newOwner: string | null
        ): TypedEventFilter<
            [string, string],
            { previousOwner: string; newOwner: string }
        >

        SecondarySaleFees(
            tokenId: null,
            recipients: null,
            bps: null
        ): TypedEventFilter<
            [BigNumber, string[], BigNumber[]],
            { tokenId: BigNumber; recipients: string[]; bps: BigNumber[] }
        >

        SignerAdded(
            account: string | null
        ): TypedEventFilter<[string], { account: string }>

        SignerRemoved(
            account: string | null
        ): TypedEventFilter<[string], { account: string }>

        TransferBatch(
            _operator: string | null,
            _from: string | null,
            _to: string | null,
            _ids: null,
            _values: null
        ): TypedEventFilter<
            [string, string, string, BigNumber[], BigNumber[]],
            {
                _operator: string
                _from: string
                _to: string
                _ids: BigNumber[]
                _values: BigNumber[]
            }
        >

        TransferSingle(
            _operator: string | null,
            _from: string | null,
            _to: string | null,
            _id: null,
            _value: null
        ): TypedEventFilter<
            [string, string, string, BigNumber, BigNumber],
            {
                _operator: string
                _from: string
                _to: string
                _id: BigNumber
                _value: BigNumber
            }
        >

        URI(
            _value: null,
            _id: BigNumberish | null
        ): TypedEventFilter<
            [string, BigNumber],
            { _value: string; _id: BigNumber }
        >
    }

    estimateGas: {
        addSigner(
            account: string,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<BigNumber>

        "addSigner(address)"(
            account: string,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<BigNumber>

        balanceOf(
            _owner: string,
            _id: BigNumberish,
            overrides?: CallOverrides
        ): Promise<BigNumber>

        "balanceOf(address,uint256)"(
            _owner: string,
            _id: BigNumberish,
            overrides?: CallOverrides
        ): Promise<BigNumber>

        balanceOfBatch(
            _owners: string[],
            _ids: BigNumberish[],
            overrides?: CallOverrides
        ): Promise<BigNumber>

        "balanceOfBatch(address[],uint256[])"(
            _owners: string[],
            _ids: BigNumberish[],
            overrides?: CallOverrides
        ): Promise<BigNumber>

        burn(
            _owner: string,
            _id: BigNumberish,
            _value: BigNumberish,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<BigNumber>

        "burn(address,uint256,uint256)"(
            _owner: string,
            _id: BigNumberish,
            _value: BigNumberish,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<BigNumber>

        contractURI(overrides?: CallOverrides): Promise<BigNumber>

        "contractURI()"(overrides?: CallOverrides): Promise<BigNumber>

        creators(
            arg0: BigNumberish,
            overrides?: CallOverrides
        ): Promise<BigNumber>

        "creators(uint256)"(
            arg0: BigNumberish,
            overrides?: CallOverrides
        ): Promise<BigNumber>

        fees(
            arg0: BigNumberish,
            arg1: BigNumberish,
            overrides?: CallOverrides
        ): Promise<BigNumber>

        "fees(uint256,uint256)"(
            arg0: BigNumberish,
            arg1: BigNumberish,
            overrides?: CallOverrides
        ): Promise<BigNumber>

        getFeeBps(
            id: BigNumberish,
            overrides?: CallOverrides
        ): Promise<BigNumber>

        "getFeeBps(uint256)"(
            id: BigNumberish,
            overrides?: CallOverrides
        ): Promise<BigNumber>

        getFeeRecipients(
            id: BigNumberish,
            overrides?: CallOverrides
        ): Promise<BigNumber>

        "getFeeRecipients(uint256)"(
            id: BigNumberish,
            overrides?: CallOverrides
        ): Promise<BigNumber>

        isApprovedForAll(
            _owner: string,
            _operator: string,
            overrides?: CallOverrides
        ): Promise<BigNumber>

        "isApprovedForAll(address,address)"(
            _owner: string,
            _operator: string,
            overrides?: CallOverrides
        ): Promise<BigNumber>

        isOwner(overrides?: CallOverrides): Promise<BigNumber>

        "isOwner()"(overrides?: CallOverrides): Promise<BigNumber>

        isSigner(account: string, overrides?: CallOverrides): Promise<BigNumber>

        "isSigner(address)"(
            account: string,
            overrides?: CallOverrides
        ): Promise<BigNumber>

        mint(
            id: BigNumberish,
            v: BigNumberish,
            r: BytesLike,
            s: BytesLike,
            fees: { recipient: string; value: BigNumberish }[],
            supply: BigNumberish,
            uri: string,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<BigNumber>

        "mint(uint256,uint8,bytes32,bytes32,tuple[],uint256,string)"(
            id: BigNumberish,
            v: BigNumberish,
            r: BytesLike,
            s: BytesLike,
            fees: { recipient: string; value: BigNumberish }[],
            supply: BigNumberish,
            uri: string,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<BigNumber>

        name(overrides?: CallOverrides): Promise<BigNumber>

        "name()"(overrides?: CallOverrides): Promise<BigNumber>

        owner(overrides?: CallOverrides): Promise<BigNumber>

        "owner()"(overrides?: CallOverrides): Promise<BigNumber>

        removeSigner(
            account: string,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<BigNumber>

        "removeSigner(address)"(
            account: string,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<BigNumber>

        renounceOwnership(
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<BigNumber>

        "renounceOwnership()"(
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<BigNumber>

        renounceSigner(
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<BigNumber>

        "renounceSigner()"(
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<BigNumber>

        safeBatchTransferFrom(
            _from: string,
            _to: string,
            _ids: BigNumberish[],
            _values: BigNumberish[],
            _data: BytesLike,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<BigNumber>

        "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"(
            _from: string,
            _to: string,
            _ids: BigNumberish[],
            _values: BigNumberish[],
            _data: BytesLike,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<BigNumber>

        safeTransferFrom(
            _from: string,
            _to: string,
            _id: BigNumberish,
            _value: BigNumberish,
            _data: BytesLike,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<BigNumber>

        "safeTransferFrom(address,address,uint256,uint256,bytes)"(
            _from: string,
            _to: string,
            _id: BigNumberish,
            _value: BigNumberish,
            _data: BytesLike,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<BigNumber>

        setApprovalForAll(
            _operator: string,
            _approved: boolean,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<BigNumber>

        "setApprovalForAll(address,bool)"(
            _operator: string,
            _approved: boolean,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<BigNumber>

        setContractURI(
            contractURI: string,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<BigNumber>

        "setContractURI(string)"(
            contractURI: string,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<BigNumber>

        setTokenURIPrefix(
            tokenURIPrefix: string,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<BigNumber>

        "setTokenURIPrefix(string)"(
            tokenURIPrefix: string,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<BigNumber>

        supportsInterface(
            interfaceId: BytesLike,
            overrides?: CallOverrides
        ): Promise<BigNumber>

        "supportsInterface(bytes4)"(
            interfaceId: BytesLike,
            overrides?: CallOverrides
        ): Promise<BigNumber>

        symbol(overrides?: CallOverrides): Promise<BigNumber>

        "symbol()"(overrides?: CallOverrides): Promise<BigNumber>

        tokenURIPrefix(overrides?: CallOverrides): Promise<BigNumber>

        "tokenURIPrefix()"(overrides?: CallOverrides): Promise<BigNumber>

        transferOwnership(
            newOwner: string,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<BigNumber>

        "transferOwnership(address)"(
            newOwner: string,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<BigNumber>

        uri(_id: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>

        "uri(uint256)"(
            _id: BigNumberish,
            overrides?: CallOverrides
        ): Promise<BigNumber>
    }

    populateTransaction: {
        addSigner(
            account: string,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<PopulatedTransaction>

        "addSigner(address)"(
            account: string,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<PopulatedTransaction>

        balanceOf(
            _owner: string,
            _id: BigNumberish,
            overrides?: CallOverrides
        ): Promise<PopulatedTransaction>

        "balanceOf(address,uint256)"(
            _owner: string,
            _id: BigNumberish,
            overrides?: CallOverrides
        ): Promise<PopulatedTransaction>

        balanceOfBatch(
            _owners: string[],
            _ids: BigNumberish[],
            overrides?: CallOverrides
        ): Promise<PopulatedTransaction>

        "balanceOfBatch(address[],uint256[])"(
            _owners: string[],
            _ids: BigNumberish[],
            overrides?: CallOverrides
        ): Promise<PopulatedTransaction>

        burn(
            _owner: string,
            _id: BigNumberish,
            _value: BigNumberish,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<PopulatedTransaction>

        "burn(address,uint256,uint256)"(
            _owner: string,
            _id: BigNumberish,
            _value: BigNumberish,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<PopulatedTransaction>

        contractURI(overrides?: CallOverrides): Promise<PopulatedTransaction>

        "contractURI()"(
            overrides?: CallOverrides
        ): Promise<PopulatedTransaction>

        creators(
            arg0: BigNumberish,
            overrides?: CallOverrides
        ): Promise<PopulatedTransaction>

        "creators(uint256)"(
            arg0: BigNumberish,
            overrides?: CallOverrides
        ): Promise<PopulatedTransaction>

        fees(
            arg0: BigNumberish,
            arg1: BigNumberish,
            overrides?: CallOverrides
        ): Promise<PopulatedTransaction>

        "fees(uint256,uint256)"(
            arg0: BigNumberish,
            arg1: BigNumberish,
            overrides?: CallOverrides
        ): Promise<PopulatedTransaction>

        getFeeBps(
            id: BigNumberish,
            overrides?: CallOverrides
        ): Promise<PopulatedTransaction>

        "getFeeBps(uint256)"(
            id: BigNumberish,
            overrides?: CallOverrides
        ): Promise<PopulatedTransaction>

        getFeeRecipients(
            id: BigNumberish,
            overrides?: CallOverrides
        ): Promise<PopulatedTransaction>

        "getFeeRecipients(uint256)"(
            id: BigNumberish,
            overrides?: CallOverrides
        ): Promise<PopulatedTransaction>

        isApprovedForAll(
            _owner: string,
            _operator: string,
            overrides?: CallOverrides
        ): Promise<PopulatedTransaction>

        "isApprovedForAll(address,address)"(
            _owner: string,
            _operator: string,
            overrides?: CallOverrides
        ): Promise<PopulatedTransaction>

        isOwner(overrides?: CallOverrides): Promise<PopulatedTransaction>

        "isOwner()"(overrides?: CallOverrides): Promise<PopulatedTransaction>

        isSigner(
            account: string,
            overrides?: CallOverrides
        ): Promise<PopulatedTransaction>

        "isSigner(address)"(
            account: string,
            overrides?: CallOverrides
        ): Promise<PopulatedTransaction>

        mint(
            id: BigNumberish,
            v: BigNumberish,
            r: BytesLike,
            s: BytesLike,
            fees: { recipient: string; value: BigNumberish }[],
            supply: BigNumberish,
            uri: string,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<PopulatedTransaction>

        "mint(uint256,uint8,bytes32,bytes32,tuple[],uint256,string)"(
            id: BigNumberish,
            v: BigNumberish,
            r: BytesLike,
            s: BytesLike,
            fees: { recipient: string; value: BigNumberish }[],
            supply: BigNumberish,
            uri: string,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<PopulatedTransaction>

        name(overrides?: CallOverrides): Promise<PopulatedTransaction>

        "name()"(overrides?: CallOverrides): Promise<PopulatedTransaction>

        owner(overrides?: CallOverrides): Promise<PopulatedTransaction>

        "owner()"(overrides?: CallOverrides): Promise<PopulatedTransaction>

        removeSigner(
            account: string,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<PopulatedTransaction>

        "removeSigner(address)"(
            account: string,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<PopulatedTransaction>

        renounceOwnership(
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<PopulatedTransaction>

        "renounceOwnership()"(
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<PopulatedTransaction>

        renounceSigner(
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<PopulatedTransaction>

        "renounceSigner()"(
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<PopulatedTransaction>

        safeBatchTransferFrom(
            _from: string,
            _to: string,
            _ids: BigNumberish[],
            _values: BigNumberish[],
            _data: BytesLike,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<PopulatedTransaction>

        "safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)"(
            _from: string,
            _to: string,
            _ids: BigNumberish[],
            _values: BigNumberish[],
            _data: BytesLike,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<PopulatedTransaction>

        safeTransferFrom(
            _from: string,
            _to: string,
            _id: BigNumberish,
            _value: BigNumberish,
            _data: BytesLike,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<PopulatedTransaction>

        "safeTransferFrom(address,address,uint256,uint256,bytes)"(
            _from: string,
            _to: string,
            _id: BigNumberish,
            _value: BigNumberish,
            _data: BytesLike,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<PopulatedTransaction>

        setApprovalForAll(
            _operator: string,
            _approved: boolean,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<PopulatedTransaction>

        "setApprovalForAll(address,bool)"(
            _operator: string,
            _approved: boolean,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<PopulatedTransaction>

        setContractURI(
            contractURI: string,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<PopulatedTransaction>

        "setContractURI(string)"(
            contractURI: string,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<PopulatedTransaction>

        setTokenURIPrefix(
            tokenURIPrefix: string,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<PopulatedTransaction>

        "setTokenURIPrefix(string)"(
            tokenURIPrefix: string,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<PopulatedTransaction>

        supportsInterface(
            interfaceId: BytesLike,
            overrides?: CallOverrides
        ): Promise<PopulatedTransaction>

        "supportsInterface(bytes4)"(
            interfaceId: BytesLike,
            overrides?: CallOverrides
        ): Promise<PopulatedTransaction>

        symbol(overrides?: CallOverrides): Promise<PopulatedTransaction>

        "symbol()"(overrides?: CallOverrides): Promise<PopulatedTransaction>

        tokenURIPrefix(overrides?: CallOverrides): Promise<PopulatedTransaction>

        "tokenURIPrefix()"(
            overrides?: CallOverrides
        ): Promise<PopulatedTransaction>

        transferOwnership(
            newOwner: string,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<PopulatedTransaction>

        "transferOwnership(address)"(
            newOwner: string,
            overrides?: Overrides & { from?: string | Promise<string> }
        ): Promise<PopulatedTransaction>

        uri(
            _id: BigNumberish,
            overrides?: CallOverrides
        ): Promise<PopulatedTransaction>

        "uri(uint256)"(
            _id: BigNumberish,
            overrides?: CallOverrides
        ): Promise<PopulatedTransaction>
    }
}
